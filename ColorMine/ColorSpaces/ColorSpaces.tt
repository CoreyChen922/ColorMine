<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
	const string availableColorSpaces = "Hsl,Lab,Rgb,Xyz";
	var colorSpaces = availableColorSpaces.Split(',').ToList();
#>
<#@ output extension=".cs" #>//Note: This is a generated file.
using System.Drawing;
using ColorMine.ColorSpaces.Conversions;

namespace ColorMine.ColorSpaces
{
    <# foreach (var spaceName in colorSpaces) { var ordinal = spaceName.ToUpper().ToCharArray();#>

    public interface I<#=spaceName#> : IColorSpace
    {
        double <#=ordinal[0]#> { get; set; }
        double <#=ordinal[1]#> { get; set; }
        double <#=ordinal[2]#> { get; set; }
    }

    public class <#=spaceName#> : ColorSpace, I<#=spaceName#>
    {
        public double <#=ordinal[0]#> { get; set; }
        public double <#=ordinal[1]#> { get; set; }
        public double <#=ordinal[2]#> { get; set; }

		public <#=spaceName#>() {}

        public <#=spaceName#>(Color color)
        {
            <#=spaceName#>Converter.ToColorSpace(color,this);
        }

        public override void Initialize(Color color)
        {
            <#=spaceName#>Converter.ToColorSpace(color,this);
        }

        public override Color ToColor()
        {
            return <#=spaceName#>Converter.ToColor(this);
        }
    }
	<# } #>

}